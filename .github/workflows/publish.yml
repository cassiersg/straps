name: CI
on:
  push:
    tags:
      - "*"
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}  - ${{ matrix.vers }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #          - vers: aarch64
          #            os: ubuntu-20.04
          - vers: auto64
            os: ubuntu-20.04
            osname: linux
          #          - vers: arm64
          #            os: macos-10.15
          #          - vers: auto64
          #            os: macos-10.15
          - vers: auto64
            os: windows-2019
            osname: windows

    env:
      SCCACHE_VERSION: 0.2.13

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.10"

      - name: Install boost on windows
        if: runner.os == 'Windows'
        run: choco install boost-msvc-14.2 --version=1.74.0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: wheels ${{ matrix.os }} ${{ matrix.vers }}
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ENVIRONMENT_WINDOWS: CXXFLAGS='-I C:/Local/boost_1_74_0'
          CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y boost-devel"
          CIBW_BUILD_VERBOSITY: "1" # Make some more noise so that travis doesn't stall
          CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
          CIBW_BUILD: "cp3*-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: ${{ matrix.vers }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.osname }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.10"

      - name: Build sdist
        run: |
          python -m pip install setuptools-rust setuptools wheel
          python setup.py sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
  release:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheel-windows
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            view the CHANGELOG.md for full changes
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
